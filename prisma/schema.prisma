generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "sqlite"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Animal {
    id              String     @id @default(cuid())
    createdAt       DateTime   @default(now())
    updatedAt       DateTime   @updatedAt
    name            String
    type            String
    description     String     
    location        String
    sex             String
    age             Int
    size            String
    characteristics String
    health          String
    color           String
    race            String
    imageUrls       ImageUrl[]
    favorites       Favorite[]
}

model ImageUrl {
    id       String @id @default(cuid())
    url      String
    animalId String
    animal   Animal @relation(fields: [animalId], references: [id], onDelete: Cascade)

    @@index([animalId])
}

model Favorite {
    id       String @id @default(cuid())
    userId   String
    animalId String
    user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    animal   Animal @relation(fields: [animalId], references: [id], onDelete: Cascade)
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String? 
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? 
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String     @id @default(cuid())
    name          String?
    email         String?    @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    favorites     Favorite[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
